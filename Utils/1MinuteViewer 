import requests

# Configuration
BASE_URL = "https://demo-api-capital.backend-capital.com"
SESSION_ENDPOINT = "/api/v1/session"
MARKET_ENDPOINT = "/api/v1/markets"
API_KEY = "TU API KEY "
LOGIN = "TU CORREO "
PASSWORD = "TU CLAVE API "

# Authenticate and retrieve tokens
def authenticate():
    url = f"{BASE_URL}{SESSION_ENDPOINT}"
    headers = {"Content-Type": "application/json", "X-CAP-API-KEY": API_KEY}
    payload = {"identifier": LOGIN, "password": PASSWORD}
    response = requests.post(url, json=payload, headers=headers)
    
    if response.status_code == 200:
        cst = response.headers.get("CST")
        x_security_token = response.headers.get("X-SECURITY-TOKEN")
        if cst and x_security_token:
            print("[INFO] Authentication successful.")
            return cst, x_security_token
        else:
            print("[ERROR] Missing CST or X-SECURITY-TOKEN in response headers.")
            print(f"[DEBUG] Response headers: {response.headers}")
            return None, None
    else:
        print(f"[ERROR] Failed to authenticate: {response.status_code} {response.text}")
        return None, None

# Test Market Info Retrieval
def get_market_info(epic, cst, x_security_token):
    url = f"{BASE_URL}{MARKET_ENDPOINT}/{epic}"
    headers = {
        "Content-Type": "application/json",
        "X-CAP-API-KEY": API_KEY,
        "CST": cst,
        "X-SECURITY-TOKEN": x_security_token
    }
    response = requests.get(url, headers=headers)
    if response.status_code == 200:
        print("[INFO] Market info retrieved successfully.")
        return response.json()
    else:
        print(f"[ERROR] Failed to retrieve market info: {response.status_code} {response.text}")
        return None

# Main Execution
if __name__ == "__main__":
    epic = "BTCUSD"  # Use the correct epic for your instrument
    cst, x_security_token = authenticate()
    if cst and x_security_token:
        market_info = get_market_info(epic, cst, x_security_token)
        if market_info:
            print(market_info)
        else:
            print("[ERROR] Could not fetch market information.")
